{
  "version": "2.1.0",
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "runs": [
    {
      "invocations": [],
      "tool": {
        "driver": {
          "name": "PVS-Studio",
          "semanticVersion": "7.33.86730.1426",
          "informationUri": "https://pvs-studio.com",
          "rules": [
            {
              "id": "V835",
              "name": "RuleV835",
              "help": {
                "text": "https://pvs-studio.com/en/docs/warnings/v835/"
              },
              "helpUri": "https://pvs-studio.com/en/docs/warnings/v835/"
            },
            {
              "id": "V525",
              "name": "RuleV525",
              "help": {
                "text": "https://pvs-studio.com/en/docs/warnings/v525/"
              },
              "helpUri": "https://pvs-studio.com/en/docs/warnings/v525/",
              "properties": {
                "tags": [
                  "security",
                  "external/cwe/cwe-682"
                ]
              }
            },
            {
              "id": "V624",
              "name": "RuleV624",
              "help": {
                "text": "https://pvs-studio.com/en/docs/warnings/v624/"
              },
              "helpUri": "https://pvs-studio.com/en/docs/warnings/v624/",
              "properties": {
                "tags": [
                  "security",
                  "external/cwe/cwe-547"
                ]
              }
            },
            {
              "id": "V819",
              "name": "RuleV819",
              "help": {
                "text": "https://pvs-studio.com/en/docs/warnings/v819/"
              },
              "helpUri": "https://pvs-studio.com/en/docs/warnings/v819/"
            },
            {
              "id": "V1032",
              "name": "RuleV1032",
              "help": {
                "text": "https://pvs-studio.com/en/docs/warnings/v1032/"
              },
              "helpUri": "https://pvs-studio.com/en/docs/warnings/v1032/",
              "properties": {
                "tags": [
                  "security",
                  "external/cwe/cwe-843"
                ]
              }
            },
            {
              "id": "V547",
              "name": "RuleV547",
              "help": {
                "text": "https://pvs-studio.com/en/docs/warnings/v547/"
              },
              "helpUri": "https://pvs-studio.com/en/docs/warnings/v547/",
              "properties": {
                "tags": [
                  "security",
                  "external/cwe/cwe-571"
                ]
              }
            },
            {
              "id": "V550",
              "name": "RuleV550",
              "help": {
                "text": "https://pvs-studio.com/en/docs/warnings/v550/"
              },
              "helpUri": "https://pvs-studio.com/en/docs/warnings/v550/",
              "properties": {
                "tags": [
                  "security",
                  "external/cwe/cwe-682"
                ]
              }
            },
            {
              "id": "V656",
              "name": "RuleV656",
              "help": {
                "text": "https://pvs-studio.com/en/docs/warnings/v656/"
              },
              "helpUri": "https://pvs-studio.com/en/docs/warnings/v656/",
              "properties": {
                "tags": [
                  "security",
                  "external/cwe/cwe-665"
                ]
              }
            },
            {
              "id": "V821",
              "name": "RuleV821",
              "help": {
                "text": "https://pvs-studio.com/en/docs/warnings/v821/"
              },
              "helpUri": "https://pvs-studio.com/en/docs/warnings/v821/"
            },
            {
              "id": "V1008",
              "name": "RuleV1008",
              "help": {
                "text": "https://pvs-studio.com/en/docs/warnings/v1008/"
              },
              "helpUri": "https://pvs-studio.com/en/docs/warnings/v1008/",
              "properties": {
                "tags": [
                  "security",
                  "external/cwe/cwe-691"
                ]
              }
            },
            {
              "id": "V1034",
              "name": "RuleV1034",
              "help": {
                "text": "https://pvs-studio.com/en/docs/warnings/v1034/"
              },
              "helpUri": "https://pvs-studio.com/en/docs/warnings/v1034/",
              "properties": {
                "tags": [
                  "security",
                  "external/cwe/cwe-834"
                ]
              }
            },
            {
              "id": "V1051",
              "name": "RuleV1051",
              "help": {
                "text": "https://pvs-studio.com/en/docs/warnings/v1051/"
              },
              "helpUri": "https://pvs-studio.com/en/docs/warnings/v1051/",
              "properties": {
                "tags": [
                  "security",
                  "external/cwe/cwe-754"
                ]
              }
            },
            {
              "id": "V584",
              "name": "RuleV584",
              "help": {
                "text": "https://pvs-studio.com/en/docs/warnings/v584/"
              },
              "helpUri": "https://pvs-studio.com/en/docs/warnings/v584/",
              "properties": {
                "tags": [
                  "security",
                  "external/cwe/cwe-480"
                ]
              }
            },
            {
              "id": "V730",
              "name": "RuleV730",
              "help": {
                "text": "https://pvs-studio.com/en/docs/warnings/v730/"
              },
              "helpUri": "https://pvs-studio.com/en/docs/warnings/v730/",
              "properties": {
                "tags": [
                  "security",
                  "external/cwe/cwe-457"
                ]
              }
            },
            {
              "id": "V636",
              "name": "RuleV636",
              "help": {
                "text": "https://pvs-studio.com/en/docs/warnings/v636/"
              },
              "helpUri": "https://pvs-studio.com/en/docs/warnings/v636/",
              "properties": {
                "tags": [
                  "security",
                  "external/cwe/cwe-682"
                ]
              }
            },
            {
              "id": "V814",
              "name": "RuleV814",
              "help": {
                "text": "https://pvs-studio.com/en/docs/warnings/v814/"
              },
              "helpUri": "https://pvs-studio.com/en/docs/warnings/v814/"
            },
            {
              "id": "V823",
              "name": "RuleV823",
              "help": {
                "text": "https://pvs-studio.com/en/docs/warnings/v823/"
              },
              "helpUri": "https://pvs-studio.com/en/docs/warnings/v823/"
            },
            {
              "id": "V829",
              "name": "RuleV829",
              "help": {
                "text": "https://pvs-studio.com/en/docs/warnings/v829/"
              },
              "helpUri": "https://pvs-studio.com/en/docs/warnings/v829/"
            },
            {
              "id": "V813",
              "name": "RuleV813",
              "help": {
                "text": "https://pvs-studio.com/en/docs/warnings/v813/"
              },
              "helpUri": "https://pvs-studio.com/en/docs/warnings/v813/"
            },
            {
              "id": "V781",
              "name": "RuleV781",
              "help": {
                "text": "https://pvs-studio.com/en/docs/warnings/v781/"
              },
              "helpUri": "https://pvs-studio.com/en/docs/warnings/v781/",
              "properties": {
                "tags": [
                  "security",
                  "external/cwe/cwe-20"
                ]
              }
            },
            {
              "id": "V707",
              "name": "RuleV707",
              "help": {
                "text": "https://pvs-studio.com/en/docs/warnings/v707/"
              },
              "helpUri": "https://pvs-studio.com/en/docs/warnings/v707/"
            },
            {
              "id": "V537",
              "name": "RuleV537",
              "help": {
                "text": "https://pvs-studio.com/en/docs/warnings/v537/"
              },
              "helpUri": "https://pvs-studio.com/en/docs/warnings/v537/",
              "properties": {
                "tags": [
                  "security",
                  "external/cwe/cwe-682"
                ]
              }
            },
            {
              "id": "V1048",
              "name": "RuleV1048",
              "help": {
                "text": "https://pvs-studio.com/en/docs/warnings/v1048/"
              },
              "helpUri": "https://pvs-studio.com/en/docs/warnings/v1048/",
              "properties": {
                "tags": [
                  "security",
                  "external/cwe/cwe-1164"
                ]
              }
            },
            {
              "id": "V501",
              "name": "RuleV501",
              "help": {
                "text": "https://pvs-studio.com/en/docs/warnings/v501/"
              },
              "helpUri": "https://pvs-studio.com/en/docs/warnings/v501/",
              "properties": {
                "tags": [
                  "security",
                  "external/cwe/cwe-570"
                ]
              }
            },
            {
              "id": "V728",
              "name": "RuleV728",
              "help": {
                "text": "https://pvs-studio.com/en/docs/warnings/v728/"
              },
              "helpUri": "https://pvs-studio.com/en/docs/warnings/v728/",
              "properties": {
                "tags": [
                  "security",
                  "external/cwe/cwe-571"
                ]
              }
            },
            {
              "id": "V560",
              "name": "RuleV560",
              "help": {
                "text": "https://pvs-studio.com/en/docs/warnings/v560/"
              },
              "helpUri": "https://pvs-studio.com/en/docs/warnings/v560/",
              "properties": {
                "tags": [
                  "security",
                  "external/cwe/cwe-571"
                ]
              }
            },
            {
              "id": "V571",
              "name": "RuleV571",
              "help": {
                "text": "https://pvs-studio.com/en/docs/warnings/v571/"
              },
              "helpUri": "https://pvs-studio.com/en/docs/warnings/v571/",
              "properties": {
                "tags": [
                  "security",
                  "external/cwe/cwe-571"
                ]
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "V835",
          "message": {
            "text": "Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, replace the first argument 'const double& width' with 'double width'."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/include/geometry/BoundingBox.h",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 51,
                  "endLine": 51
                }
              }
            }
          ]
        },
        {
          "ruleId": "V835",
          "message": {
            "text": "Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, replace the second argument 'const double& height' with 'double height'."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/include/geometry/BoundingBox.h",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 51,
                  "endLine": 51
                }
              }
            }
          ]
        },
        {
          "ruleId": "V835",
          "message": {
            "text": "Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, replace the first argument 'const double& width' with 'double width'."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/include/geometry/BoundingBox.h",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 96,
                  "endLine": 96
                }
              }
            }
          ]
        },
        {
          "ruleId": "V835",
          "message": {
            "text": "Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, replace the second argument 'const double& height' with 'double height'."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/include/geometry/BoundingBox.h",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 96,
                  "endLine": 96
                }
              }
            }
          ]
        },
        {
          "ruleId": "V835",
          "message": {
            "text": "Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, replace the first argument 'const double& width' with 'double width'."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/include/geometry/BoundingBox.h",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 154,
                  "endLine": 154
                }
              }
            }
          ]
        },
        {
          "ruleId": "V835",
          "message": {
            "text": "Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, replace the second argument 'const double& height' with 'double height'."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/include/geometry/BoundingBox.h",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 154,
                  "endLine": 154
                }
              }
            }
          ]
        },
        {
          "ruleId": "V525",
          "message": {
            "text": "The code contains the collection of similar blocks. Check items '2 * BWCOLS', '2 * BWCOLS', '3 * BWCOLS' in lines 234, 235, 237."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/Bitmap.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 234,
                  "endLine": 234
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "message": {
                "text": "The code contains the collection of similar blocks. Check items '2 * BWCOLS', '2 * BWCOLS', '3 * BWCOLS' in lines 234, 235, 237."
              },
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/Bitmap.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "endLine": 234,
                  "startLine": 234
                }
              }
            },
            {
              "message": {
                "text": "The code contains the collection of similar blocks. Check items '2 * BWCOLS', '2 * BWCOLS', '3 * BWCOLS' in lines 234, 235, 237."
              },
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/Bitmap.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "endLine": 235,
                  "startLine": 235
                }
              }
            },
            {
              "message": {
                "text": "The code contains the collection of similar blocks. Check items '2 * BWCOLS', '2 * BWCOLS', '3 * BWCOLS' in lines 234, 235, 237."
              },
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/Bitmap.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "endLine": 237,
                  "startLine": 237
                }
              }
            }
          ]
        },
        {
          "ruleId": "V624",
          "message": {
            "text": "The constant 3.1415926535 is being utilized. The resulting value could be inaccurate. Consider using the M_PI constant from <math.h>."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/Constants.h",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 16,
                  "endLine": 16
                }
              }
            }
          ]
        },
        {
          "ruleId": "V819",
          "message": {
            "text": "Decreased performance. Memory is allocated and deleted multiple times inside the body of the loop. Consider moving memory allocation outside of the loop."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/CovidSim.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 4039,
                  "endLine": 4039
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "message": {
                "text": "Decreased performance. Memory is allocated and deleted multiple times inside the body of the loop. Consider moving memory allocation outside of the loop."
              },
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/CovidSim.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "endLine": 4039,
                  "startLine": 4039
                }
              }
            },
            {
              "message": {
                "text": "Decreased performance. Memory is allocated and deleted multiple times inside the body of the loop. Consider moving memory allocation outside of the loop."
              },
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/CovidSim.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "endLine": 4114,
                  "startLine": 4114
                }
              }
            }
          ]
        },
        {
          "ruleId": "V819",
          "message": {
            "text": "Decreased performance. Memory is allocated and deleted multiple times inside the body of the loop. Consider moving memory allocation outside of the loop."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/CovidSim.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 4040,
                  "endLine": 4040
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "message": {
                "text": "Decreased performance. Memory is allocated and deleted multiple times inside the body of the loop. Consider moving memory allocation outside of the loop."
              },
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/CovidSim.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "endLine": 4040,
                  "startLine": 4040
                }
              }
            },
            {
              "message": {
                "text": "Decreased performance. Memory is allocated and deleted multiple times inside the body of the loop. Consider moving memory allocation outside of the loop."
              },
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/CovidSim.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "endLine": 4115,
                  "startLine": 4115
                }
              }
            }
          ]
        },
        {
          "ruleId": "V1032",
          "message": {
            "text": "The pointer 'TimeSeries' is cast to a more strictly aligned pointer type."
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/CovidSim.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 3994,
                  "endLine": 3994
                }
              }
            }
          ]
        },
        {
          "ruleId": "V1032",
          "message": {
            "text": "The pointer 'TSMean' is cast to a more strictly aligned pointer type."
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/CovidSim.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 3995,
                  "endLine": 3995
                }
              }
            }
          ]
        },
        {
          "ruleId": "V1032",
          "message": {
            "text": "The pointer 'TSVar' is cast to a more strictly aligned pointer type."
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/CovidSim.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 3996,
                  "endLine": 3996
                }
              }
            }
          ]
        },
        {
          "ruleId": "V547",
          "message": {
            "text": "Expression 'ColTypes[col] == 2' is always true."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/CovidSim.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 3772,
                  "endLine": 3772
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison. It's probably better to use a comparison with defined precision: fabs(A - B) < Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/CovidSim.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 753,
                  "endLine": 753
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison: P.InitialImmunity[0] != 0. It's probably better to use a comparison with defined precision: fabs(A - B) > Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/CovidSim.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 1070,
                  "endLine": 1070
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison: P.InitialImmunity[0] == 1. It's probably better to use a comparison with defined precision: fabs(A - B) < Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/CovidSim.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 1074,
                  "endLine": 1074
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison: P.InitialImmunity[m] == 1. It's probably better to use a comparison with defined precision: fabs(A - B) < Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/CovidSim.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 1086,
                  "endLine": 1086
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison: P.FalsePositivePerCapitaIncidence == 0. It's probably better to use a comparison with defined precision: fabs(A - B) < Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/CovidSim.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 1499,
                  "endLine": 1499
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison: InfectionImportRate == 0. It's probably better to use a comparison with defined precision: fabs(A - B) < Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/CovidSim.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 1500,
                  "endLine": 1500
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison: t != P.ModelTimeStep. It's probably better to use a comparison with defined precision: fabs(A - B) > Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/CovidSim.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 2650,
                  "endLine": 2650
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison. It's probably better to use a comparison with defined precision: fabs(A - B) < Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/CovidSim.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 2883,
                  "endLine": 2883
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison. It's probably better to use a comparison with defined precision: fabs(A - B) < Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/CovidSim.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 2902,
                  "endLine": 2902
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison. It's probably better to use a comparison with defined precision: fabs(A - B) < Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/CovidSim.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 2914,
                  "endLine": 2914
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison. It's probably better to use a comparison with defined precision: fabs(A - B) < Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/CovidSim.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 2931,
                  "endLine": 2931
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison. It's probably better to use a comparison with defined precision: fabs(A - B) < Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/CovidSim.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 2966,
                  "endLine": 2966
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison: P.DateTriggerReached_SimTime == 0. It's probably better to use a comparison with defined precision: fabs(A - B) < Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/CovidSim.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 3514,
                  "endLine": 3514
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison. It's probably better to use a comparison with defined precision: fabs(A - B) < Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/CovidSim.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 3528,
                  "endLine": 3528
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison. It's probably better to use a comparison with defined precision: fabs(A - B) < Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/CovidSim.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 3670,
                  "endLine": 3670
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison: P.PlaceCloseFracIncTrig == 0. It's probably better to use a comparison with defined precision: fabs(A - B) < Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/CovidSim.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 3673,
                  "endLine": 3673
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison: Data[row - 1][col] == - 1. It's probably better to use a comparison with defined precision: fabs(A - B) < Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/CovidSim.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 3777,
                  "endLine": 3777
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison: TimeSeries[n].Rdenom == 0. It's probably better to use a comparison with defined precision: fabs(A - B) < Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/CovidSim.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 3968,
                  "endLine": 3968
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison. It's probably better to use a comparison with defined precision: fabs(A) > Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/CovidSim.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 3978,
                  "endLine": 3978
                }
              }
            }
          ]
        },
        {
          "ruleId": "V656",
          "message": {
            "text": "Variables 'Hosts[k].ProbAbsent', 'Hosts[k].ProbCare' are initialized through the call to the same function. It's probably an error or un-optimized code. Consider inspecting the '(float) ranf_mt(tn)' expression. Check lines: 1027, 1028."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/CovidSim.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 1028,
                  "endLine": 1028
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "message": {
                "text": "Variables 'Hosts[k].ProbAbsent', 'Hosts[k].ProbCare' are initialized through the call to the same function. It's probably an error or un-optimized code. Consider inspecting the '(float) ranf_mt(tn)' expression. Check lines: 1027, 1028."
              },
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/CovidSim.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "endLine": 1027,
                  "startLine": 1027
                }
              }
            },
            {
              "message": {
                "text": "Variables 'Hosts[k].ProbAbsent', 'Hosts[k].ProbCare' are initialized through the call to the same function. It's probably an error or un-optimized code. Consider inspecting the '(float) ranf_mt(tn)' expression. Check lines: 1027, 1028."
              },
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/CovidSim.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "endLine": 1028,
                  "startLine": 1028
                }
              }
            }
          ]
        },
        {
          "ruleId": "V821",
          "message": {
            "text": "Decreased performance. The 'CloseNode' variable can be constructed in a lower level scope."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/CovidSim.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 655,
                  "endLine": 655
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "message": {
                "text": "Decreased performance. The 'CloseNode' variable can be constructed in a lower level scope."
              },
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/CovidSim.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "endLine": 655,
                  "startLine": 655
                }
              }
            },
            {
              "message": {
                "text": "Decreased performance. The 'CloseNode' variable can be constructed in a lower level scope."
              },
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/CovidSim.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "endLine": 668,
                  "startLine": 668
                }
              }
            }
          ]
        },
        {
          "ruleId": "V835",
          "message": {
            "text": "Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, replace the third argument 'const int& NumSegments' with 'int NumSegments'."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/CovidSim.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 2833,
                  "endLine": 2833
                }
              }
            }
          ]
        },
        {
          "ruleId": "V1008",
          "message": {
            "text": "Consider inspecting the 'for' operator. No more than one iteration of the loop will be performed."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/CovidSim.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 1060,
                  "endLine": 1060
                }
              }
            }
          ]
        },
        {
          "ruleId": "V1008",
          "message": {
            "text": "Consider inspecting the 'for' operator. No more than one iteration of the loop will be performed."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/CovidSim.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 2682,
                  "endLine": 2682
                }
              }
            }
          ]
        },
        {
          "ruleId": "V1034",
          "message": {
            "text": "Do not use real type variables as loop counters."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/CovidSim.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 1537,
                  "endLine": 1537
                }
              }
            }
          ]
        },
        {
          "ruleId": "V1051",
          "message": {
            "text": "Consider checking for misprints. It's possible that the 'P.DateTriggerReached_SimTime' should be checked here."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/CovidSim.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 3517,
                  "endLine": 3517
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "message": {
                "text": "Consider checking for misprints. It's possible that the 'P.DateTriggerReached_SimTime' should be checked here."
              },
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/CovidSim.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "endLine": 3516,
                  "startLine": 3516
                }
              }
            },
            {
              "message": {
                "text": "Consider checking for misprints. It's possible that the 'P.DateTriggerReached_SimTime' should be checked here."
              },
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/CovidSim.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "endLine": 3517,
                  "startLine": 3517
                }
              }
            }
          ]
        },
        {
          "ruleId": "V1051",
          "message": {
            "text": "Consider checking for misprints. It's possible that the 'P.Epidemic_StartDate_CalTime' should be checked here."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/CovidSim.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 3517,
                  "endLine": 3517
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "message": {
                "text": "Consider checking for misprints. It's possible that the 'P.Epidemic_StartDate_CalTime' should be checked here."
              },
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/CovidSim.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "endLine": 3516,
                  "startLine": 3516
                }
              }
            },
            {
              "message": {
                "text": "Consider checking for misprints. It's possible that the 'P.Epidemic_StartDate_CalTime' should be checked here."
              },
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/CovidSim.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "endLine": 3517,
                  "startLine": 3517
                }
              }
            }
          ]
        },
        {
          "ruleId": "V1051",
          "message": {
            "text": "Consider checking for misprints. It's possible that the 'P.PlaceCloseTimeStartPrevious' should be checked here."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/CovidSim.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 3673,
                  "endLine": 3673
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "message": {
                "text": "Consider checking for misprints. It's possible that the 'P.PlaceCloseTimeStartPrevious' should be checked here."
              },
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/CovidSim.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "endLine": 3672,
                  "startLine": 3672
                }
              }
            },
            {
              "message": {
                "text": "Consider checking for misprints. It's possible that the 'P.PlaceCloseTimeStartPrevious' should be checked here."
              },
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/CovidSim.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "endLine": 3673,
                  "startLine": 3673
                }
              }
            }
          ]
        },
        {
          "ruleId": "V584",
          "message": {
            "text": "The 'P.in_degrees_.height' value is present on both sides of the '>' operator. The expression is incorrect or it can be simplified."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/Dist.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 126,
                  "endLine": 126
                }
              }
            }
          ]
        },
        {
          "ruleId": "V730",
          "message": {
            "text": "Not all members of a class are initialized inside the compiler generated constructor. Consider inspecting: delta_, expansion_factor_."
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/Kernels.h",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 80,
                  "endLine": 80
                }
              }
            }
          ]
        },
        {
          "ruleId": "V835",
          "message": {
            "text": "Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, replace the first argument 'const MicroCellPosition& position' with 'MicroCellPosition position'."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/Param.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 9,
                  "endLine": 9
                }
              }
            }
          ]
        },
        {
          "ruleId": "V835",
          "message": {
            "text": "Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, replace the first argument 'const MicroCellPosition& position' with 'MicroCellPosition position'."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/Param.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 16,
                  "endLine": 16
                }
              }
            }
          ]
        },
        {
          "ruleId": "V730",
          "message": {
            "text": "Not all members of a class are initialized inside the compiler generated constructor. Consider inspecting: PopSize, NumHouseholds, NumRealisations, NumNonExtinctRealisations, NRactual, NRactE, ..."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/Param.h",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 26,
                  "endLine": 26
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison: s == 1.0. It's probably better to use a comparison with defined precision: fabs(A - B) < Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/Rand.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 810,
                  "endLine": 810
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison: s == 1.0. It's probably better to use a comparison with defined precision: fabs(A - B) < Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/Rand.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 937,
                  "endLine": 937
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison: S == 0. It's probably better to use a comparison with defined precision: fabs(A - B) < Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/Rand.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 1007,
                  "endLine": 1007
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison: beta != 1. It's probably better to use a comparison with defined precision: fabs(A - B) > Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/Rand.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 1049,
                  "endLine": 1049
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison: beta != 1. It's probably better to use a comparison with defined precision: fabs(A - B) > Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/Rand.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 1073,
                  "endLine": 1073
                }
              }
            }
          ]
        },
        {
          "ruleId": "V636",
          "message": {
            "text": "The 'k * k' expression was implicitly cast from 'int' type to 'double' type. Consider utilizing an explicit type cast to avoid overflow. An example: double A = (double)(X) * Y;."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/Rand.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 618,
                  "endLine": 618
                }
              }
            }
          ]
        },
        {
          "ruleId": "V656",
          "message": {
            "text": "Variables 'u', 'v' are initialized through the call to the same function. It's probably an error or un-optimized code. Consider inspecting the '2 * ranf_mt(tn) - 1' expression. Check lines: 1002, 1003."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/Rand.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 1003,
                  "endLine": 1003
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "message": {
                "text": "Variables 'u', 'v' are initialized through the call to the same function. It's probably an error or un-optimized code. Consider inspecting the '2 * ranf_mt(tn) - 1' expression. Check lines: 1002, 1003."
              },
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/Rand.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "endLine": 1002,
                  "startLine": 1002
                }
              }
            },
            {
              "message": {
                "text": "Variables 'u', 'v' are initialized through the call to the same function. It's probably an error or un-optimized code. Consider inspecting the '2 * ranf_mt(tn) - 1' expression. Check lines: 1002, 1003."
              },
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/Rand.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "endLine": 1003,
                  "startLine": 1003
                }
              }
            }
          ]
        },
        {
          "ruleId": "V814",
          "message": {
            "text": "Decreased performance. The 'strlen' function was called multiple times inside the body of a loop."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/ReadParams.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 1828,
                  "endLine": 1828
                }
              }
            }
          ]
        },
        {
          "ruleId": "V814",
          "message": {
            "text": "Decreased performance. The 'strlen' function was called multiple times inside the body of a loop."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/ReadParams.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 1829,
                  "endLine": 1829
                }
              }
            }
          ]
        },
        {
          "ruleId": "V823",
          "message": {
            "text": "Decreased performance. Object may be created in-place in the 'param_map' container. Consider replacing methods: 'insert' -> 'emplace'."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/ReadParams.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 47,
                  "endLine": 47
                }
              }
            }
          ]
        },
        {
          "ruleId": "V823",
          "message": {
            "text": "Decreased performance. Object may be created in-place in the 'param_map' container. Consider replacing methods: 'insert' -> 'emplace'."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/ReadParams.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 78,
                  "endLine": 78
                }
              }
            }
          ]
        },
        {
          "ruleId": "V829",
          "message": {
            "text": "Lifetime of the heap-allocated variable 'CountryNames' is limited to the current function's scope. Consider allocating it on the stack instead."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/ReadParams.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 1735,
                  "endLine": 1735
                }
              }
            }
          ]
        },
        {
          "ruleId": "V547",
          "message": {
            "text": "Expression 'nc > 0' is always true."
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/ReadParams.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 1818,
                  "endLine": 1818
                }
              }
            }
          ]
        },
        {
          "ruleId": "V813",
          "message": {
            "text": "Decreased performance. The 's', 'param' arguments should probably be rendered as constant references."
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/ReadParams.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 87,
                  "endLine": 87
                }
              }
            }
          ]
        },
        {
          "ruleId": "V813",
          "message": {
            "text": "Decreased performance. The 's', 'param' arguments should probably be rendered as constant references."
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/ReadParams.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 105,
                  "endLine": 105
                }
              }
            }
          ]
        },
        {
          "ruleId": "V813",
          "message": {
            "text": "Decreased performance. The 'value' argument should probably be rendered as a constant reference."
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/ReadParams.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 119,
                  "endLine": 119
                }
              }
            }
          ]
        },
        {
          "ruleId": "V813",
          "message": {
            "text": "Decreased performance. The 'param_name' argument should probably be rendered as a constant reference."
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/ReadParams.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 134,
                  "endLine": 134
                }
              }
            }
          ]
        },
        {
          "ruleId": "V813",
          "message": {
            "text": "Decreased performance. The 'param_name' argument should probably be rendered as a constant reference."
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/ReadParams.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 160,
                  "endLine": 160
                }
              }
            }
          ]
        },
        {
          "ruleId": "V813",
          "message": {
            "text": "Decreased performance. The 'param_name' argument should probably be rendered as a constant reference."
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/ReadParams.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 165,
                  "endLine": 165
                }
              }
            }
          ]
        },
        {
          "ruleId": "V813",
          "message": {
            "text": "Decreased performance. The 'param_name' argument should probably be rendered as a constant reference."
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/ReadParams.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 170,
                  "endLine": 170
                }
              }
            }
          ]
        },
        {
          "ruleId": "V813",
          "message": {
            "text": "Decreased performance. The 'param_name' argument should probably be rendered as a constant reference."
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/ReadParams.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 175,
                  "endLine": 175
                }
              }
            }
          ]
        },
        {
          "ruleId": "V813",
          "message": {
            "text": "Decreased performance. The 'param_name' argument should probably be rendered as a constant reference."
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/ReadParams.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 180,
                  "endLine": 180
                }
              }
            }
          ]
        },
        {
          "ruleId": "V813",
          "message": {
            "text": "Decreased performance. The 'param_name' argument should probably be rendered as a constant reference."
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/ReadParams.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 188,
                  "endLine": 188
                }
              }
            }
          ]
        },
        {
          "ruleId": "V813",
          "message": {
            "text": "Decreased performance. The 'param_name' argument should probably be rendered as a constant reference."
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/ReadParams.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 212,
                  "endLine": 212
                }
              }
            }
          ]
        },
        {
          "ruleId": "V813",
          "message": {
            "text": "Decreased performance. The 'param_name' argument should probably be rendered as a constant reference."
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/ReadParams.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 219,
                  "endLine": 219
                }
              }
            }
          ]
        },
        {
          "ruleId": "V813",
          "message": {
            "text": "Decreased performance. The 'param_name' argument should probably be rendered as a constant reference."
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/ReadParams.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 234,
                  "endLine": 234
                }
              }
            }
          ]
        },
        {
          "ruleId": "V813",
          "message": {
            "text": "Decreased performance. The 'param_name' argument should probably be rendered as a constant reference."
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/ReadParams.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 239,
                  "endLine": 239
                }
              }
            }
          ]
        },
        {
          "ruleId": "V813",
          "message": {
            "text": "Decreased performance. The 'param_name' argument should probably be rendered as a constant reference."
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/ReadParams.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 244,
                  "endLine": 244
                }
              }
            }
          ]
        },
        {
          "ruleId": "V813",
          "message": {
            "text": "Decreased performance. The 'param_name' argument should probably be rendered as a constant reference."
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/ReadParams.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 249,
                  "endLine": 249
                }
              }
            }
          ]
        },
        {
          "ruleId": "V813",
          "message": {
            "text": "Decreased performance. The 'param_name' argument should probably be rendered as a constant reference."
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/ReadParams.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 257,
                  "endLine": 257
                }
              }
            }
          ]
        },
        {
          "ruleId": "V813",
          "message": {
            "text": "Decreased performance. The 'param_name' argument should probably be rendered as a constant reference."
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/ReadParams.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 272,
                  "endLine": 272
                }
              }
            }
          ]
        },
        {
          "ruleId": "V813",
          "message": {
            "text": "Decreased performance. The 'param_name' argument should probably be rendered as a constant reference."
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/ReadParams.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 277,
                  "endLine": 277
                }
              }
            }
          ]
        },
        {
          "ruleId": "V813",
          "message": {
            "text": "Decreased performance. The 'param_name' argument should probably be rendered as a constant reference."
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/ReadParams.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 282,
                  "endLine": 282
                }
              }
            }
          ]
        },
        {
          "ruleId": "V813",
          "message": {
            "text": "Decreased performance. The 'param_name' argument should probably be rendered as a constant reference."
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/ReadParams.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 287,
                  "endLine": 287
                }
              }
            }
          ]
        },
        {
          "ruleId": "V813",
          "message": {
            "text": "Decreased performance. The 'param_name' argument should probably be rendered as a constant reference."
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/ReadParams.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 292,
                  "endLine": 292
                }
              }
            }
          ]
        },
        {
          "ruleId": "V813",
          "message": {
            "text": "Decreased performance. The 'param_name' argument should probably be rendered as a constant reference."
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/ReadParams.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 299,
                  "endLine": 299
                }
              }
            }
          ]
        },
        {
          "ruleId": "V813",
          "message": {
            "text": "Decreased performance. The 'param_name' argument should probably be rendered as a constant reference."
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/ReadParams.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 329,
                  "endLine": 329
                }
              }
            }
          ]
        },
        {
          "ruleId": "V813",
          "message": {
            "text": "Decreased performance. The 'param_name' argument should probably be rendered as a constant reference."
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/ReadParams.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 334,
                  "endLine": 334
                }
              }
            }
          ]
        },
        {
          "ruleId": "V813",
          "message": {
            "text": "Decreased performance. The 'param_name' argument should probably be rendered as a constant reference."
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/ReadParams.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 339,
                  "endLine": 339
                }
              }
            }
          ]
        },
        {
          "ruleId": "V813",
          "message": {
            "text": "Decreased performance. The 'param_name' argument should probably be rendered as a constant reference."
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/ReadParams.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 344,
                  "endLine": 344
                }
              }
            }
          ]
        },
        {
          "ruleId": "V813",
          "message": {
            "text": "Decreased performance. The 'param_name' argument should probably be rendered as a constant reference."
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/ReadParams.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 351,
                  "endLine": 351
                }
              }
            }
          ]
        },
        {
          "ruleId": "V813",
          "message": {
            "text": "Decreased performance. The 'param_name' argument should probably be rendered as a constant reference."
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/ReadParams.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 385,
                  "endLine": 385
                }
              }
            }
          ]
        },
        {
          "ruleId": "V813",
          "message": {
            "text": "Decreased performance. The 'param_name' argument should probably be rendered as a constant reference."
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/ReadParams.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 390,
                  "endLine": 390
                }
              }
            }
          ]
        },
        {
          "ruleId": "V813",
          "message": {
            "text": "Decreased performance. The 'param_name' argument should probably be rendered as a constant reference."
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/ReadParams.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 395,
                  "endLine": 395
                }
              }
            }
          ]
        },
        {
          "ruleId": "V813",
          "message": {
            "text": "Decreased performance. The 'param_name' argument should probably be rendered as a constant reference."
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/ReadParams.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 400,
                  "endLine": 400
                }
              }
            }
          ]
        },
        {
          "ruleId": "V813",
          "message": {
            "text": "Decreased performance. The 'param_name' argument should probably be rendered as a constant reference."
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/ReadParams.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 405,
                  "endLine": 405
                }
              }
            }
          ]
        },
        {
          "ruleId": "V813",
          "message": {
            "text": "Decreased performance. The 'param_name' argument should probably be rendered as a constant reference."
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/ReadParams.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 412,
                  "endLine": 412
                }
              }
            }
          ]
        },
        {
          "ruleId": "V813",
          "message": {
            "text": "Decreased performance. The 'param_name' argument should probably be rendered as a constant reference."
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/ReadParams.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 435,
                  "endLine": 435
                }
              }
            }
          ]
        },
        {
          "ruleId": "V813",
          "message": {
            "text": "Decreased performance. The 'param_name' argument should probably be rendered as a constant reference."
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/ReadParams.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 442,
                  "endLine": 442
                }
              }
            }
          ]
        },
        {
          "ruleId": "V813",
          "message": {
            "text": "Decreased performance. The 'param_name' argument should probably be rendered as a constant reference."
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/ReadParams.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 489,
                  "endLine": 489
                }
              }
            }
          ]
        },
        {
          "ruleId": "V813",
          "message": {
            "text": "Decreased performance. The 'param_name' argument should probably be rendered as a constant reference."
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/ReadParams.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 1519,
                  "endLine": 1519
                }
              }
            }
          ]
        },
        {
          "ruleId": "V1051",
          "message": {
            "text": "Consider checking for misprints. It's possible that the 'P->PlaceCloseAdunitPropThresh' should be checked here."
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/ReadParams.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 1394,
                  "endLine": 1394
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "message": {
                "text": "Consider checking for misprints. It's possible that the 'P->PlaceCloseAdunitPropThresh' should be checked here."
              },
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/ReadParams.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "endLine": 1393,
                  "startLine": 1393
                }
              }
            },
            {
              "message": {
                "text": "Consider checking for misprints. It's possible that the 'P->PlaceCloseAdunitPropThresh' should be checked here."
              },
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/ReadParams.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "endLine": 1394,
                  "startLine": 1394
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison: P->DigitalContactTracingDelay == 0. It's probably better to use a comparison with defined precision: fabs(A - B) < Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/ReadParams.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 1296,
                  "endLine": 1296
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison: P->KernelOffsetScale != 1. It's probably better to use a comparison with defined precision: fabs(A - B) > Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/ReadParams.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 1945,
                  "endLine": 1945
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison: P->KernelPowerScale != 1. It's probably better to use a comparison with defined precision: fabs(A - B) > Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/ReadParams.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 1952,
                  "endLine": 1952
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison: P->TreatRadius2 == 0. It's probably better to use a comparison with defined precision: fabs(A - B) < Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/ReadParams.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 2310,
                  "endLine": 2310
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison: P->VaccRadius2 == 0. It's probably better to use a comparison with defined precision: fabs(A - B) < Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/ReadParams.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 2311,
                  "endLine": 2311
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison: P->PlaceCloseRadius2 == 0. It's probably better to use a comparison with defined precision: fabs(A - B) < Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/ReadParams.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 2312,
                  "endLine": 2312
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison: P->MoveRestrRadius2 == 0. It's probably better to use a comparison with defined precision: fabs(A - B) < Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/ReadParams.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 2313,
                  "endLine": 2313
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison: P->SocDistRadius2 == 0. It's probably better to use a comparison with defined precision: fabs(A - B) < Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/ReadParams.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 2314,
                  "endLine": 2314
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison: P->KeyWorkerProphRadius2 == 0. It's probably better to use a comparison with defined precision: fabs(A - B) < Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/ReadParams.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 2315,
                  "endLine": 2315
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison: P->R0scale != 1.0. It's probably better to use a comparison with defined precision: fabs(A - B) > Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/ReadParams.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 2347,
                  "endLine": 2347
                }
              }
            }
          ]
        },
        {
          "ruleId": "V781",
          "message": {
            "text": "The value of the 'm' index is checked after it was used. Perhaps there is a mistake in program logic."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/SetupModel.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 1238,
                  "endLine": 1238
                }
              }
            }
          ]
        },
        {
          "ruleId": "V707",
          "message": {
            "text": "Giving short names to global variables is considered to be bad practice. It is suggested to rename 'BF' variable."
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/SetupModel.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 23,
                  "endLine": 23
                }
              }
            }
          ]
        },
        {
          "ruleId": "V1032",
          "message": {
            "text": "The pointer 'TSMean' is cast to a more strictly aligned pointer type."
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/SetupModel.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 581,
                  "endLine": 581
                }
              }
            }
          ]
        },
        {
          "ruleId": "V1032",
          "message": {
            "text": "The pointer 'TSVar' is cast to a more strictly aligned pointer type."
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/SetupModel.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 582,
                  "endLine": 582
                }
              }
            }
          ]
        },
        {
          "ruleId": "V537",
          "message": {
            "text": "Consider reviewing the correctness of 'height' item's usage."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/SetupModel.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 149,
                  "endLine": 149
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison: P.SusceptibilitySD == 0. It's probably better to use a comparison with defined precision: fabs(A - B) < Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/SetupModel.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 672,
                  "endLine": 672
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison: P.InfectiousnessSD == 0. It's probably better to use a comparison with defined precision: fabs(A - B) < Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/SetupModel.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 678,
                  "endLine": 678
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison: PropPlaces[k][l] != 0. It's probably better to use a comparison with defined precision: fabs(A - B) > Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/SetupModel.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 1572,
                  "endLine": 1572
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison: t == 0. It's probably better to use a comparison with defined precision: fabs(A - B) < Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/SetupModel.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 1743,
                  "endLine": 1743
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison: P.PlaceTypeSizePower[tp] == 0. It's probably better to use a comparison with defined precision: fabs(A - B) < Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/SetupModel.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 2074,
                  "endLine": 2074
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison: P.PlaceTypeSizeSD[tp] == 0. It's probably better to use a comparison with defined precision: fabs(A - B) < Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/SetupModel.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 2074,
                  "endLine": 2074
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison: P.PlaceTypeSizePower[tp] == 0. It's probably better to use a comparison with defined precision: fabs(A - B) < Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/SetupModel.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 2085,
                  "endLine": 2085
                }
              }
            }
          ]
        },
        {
          "ruleId": "V656",
          "message": {
            "text": "Variables 'rand_r', 'rand_theta' are initialized through the call to the same function. It's probably an error or un-optimized code. Consider inspecting the 'ranf()' expression."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/SetupModel.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 1403,
                  "endLine": 1403
                }
              }
            }
          ]
        },
        {
          "ruleId": "V656",
          "message": {
            "text": "Variables 'a[0]', 'a[1]' are initialized through the call to the same function. It's probably an error or un-optimized code. Check lines: 1934, 1935."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/SetupModel.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 1935,
                  "endLine": 1935
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "message": {
                "text": "Variables 'a[0]', 'a[1]' are initialized through the call to the same function. It's probably an error or un-optimized code. Check lines: 1934, 1935."
              },
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/SetupModel.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "endLine": 1934,
                  "startLine": 1934
                }
              }
            },
            {
              "message": {
                "text": "Variables 'a[0]', 'a[1]' are initialized through the call to the same function. It's probably an error or un-optimized code. Check lines: 1934, 1935."
              },
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/SetupModel.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "endLine": 1935,
                  "startLine": 1935
                }
              }
            }
          ]
        },
        {
          "ruleId": "V1048",
          "message": {
            "text": "The 'l' variable was assigned the same value."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/SetupModel.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 416,
                  "endLine": 416
                }
              }
            }
          ]
        },
        {
          "ruleId": "V1048",
          "message": {
            "text": "The 'm' variable was assigned the same value."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/SetupModel.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 416,
                  "endLine": 416
                }
              }
            }
          ]
        },
        {
          "ruleId": "V1048",
          "message": {
            "text": "The 'l' variable was assigned the same value."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/SetupModel.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 453,
                  "endLine": 453
                }
              }
            }
          ]
        },
        {
          "ruleId": "V501",
          "message": {
            "text": "There are identical sub-expressions 'Hosts[contact].is_infectious_almost_symptomatic()' to the left and to the right of the '||' operator."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/Sweep.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 1278,
                  "endLine": 1278
                }
              }
            }
          ]
        },
        {
          "ruleId": "V728",
          "message": {
            "text": "An excessive check can be simplified. The '||' operator is surrounded by opposite expressions '!P.RemoveContactsOfNegativeIndexCase' and 'P.RemoveContactsOfNegativeIndexCase'. "
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/Sweep.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 1180,
                  "endLine": 1180
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison. It's probably better to use a comparison with defined precision: fabs(A - B) > Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/Sweep.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 31,
                  "endLine": 31
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison. It's probably better to use a comparison with defined precision: fabs(A - B) > Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/Sweep.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 85,
                  "endLine": 85
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison: P.RelativeTravelRate[d2] == 1. It's probably better to use a comparison with defined precision: fabs(A - B) < Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/Sweep.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 121,
                  "endLine": 121
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison: P.RelativeTravelRate[d2] == 1. It's probably better to use a comparison with defined precision: fabs(A - B) < Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/Sweep.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 230,
                  "endLine": 230
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison: PlaceSusceptibility == 1. It's probably better to use a comparison with defined precision: fabs(A - B) < Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/Sweep.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 531,
                  "endLine": 531
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison: PlaceSusceptibility == 1. It's probably better to use a comparison with defined precision: fabs(A - B) < Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/Sweep.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 629,
                  "endLine": 629
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison: Spatial_Susc == 1. It's probably better to use a comparison with defined precision: fabs(A - B) < Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/Sweep.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 839,
                  "endLine": 839
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison: P.HolidayEffect[PlaceType] == 0. It's probably better to use a comparison with defined precision: fabs(A - B) < Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/Sweep.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 902,
                  "endLine": 902
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison: P.SensitivityDCT == 0. It's probably better to use a comparison with defined precision: fabs(A - B) < Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/Sweep.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 1086,
                  "endLine": 1086
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison: P.SpecificityDCT == 1. It's probably better to use a comparison with defined precision: fabs(A - B) < Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/Sweep.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 1097,
                  "endLine": 1097
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison: P.SensitivityDCT == 0. It's probably better to use a comparison with defined precision: fabs(A - B) < Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/Sweep.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 1157,
                  "endLine": 1157
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison: P.SpecificityDCT == 1. It's probably better to use a comparison with defined precision: fabs(A - B) < Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/Sweep.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 1168,
                  "endLine": 1168
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison: P.SensitivityDCT == 0. It's probably better to use a comparison with defined precision: fabs(A - B) < Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/Sweep.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 1243,
                  "endLine": 1243
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison: P.SpecificityDCT == 1. It's probably better to use a comparison with defined precision: fabs(A - B) < Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/Sweep.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 1266,
                  "endLine": 1266
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison: P.TreatPlaceTotalProp[PlaceType] == 1. It's probably better to use a comparison with defined precision: fabs(A - B) < Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/Sweep.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 1379,
                  "endLine": 1379
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison: P.TreatPlaceTotalProp[PlaceType] == 1. It's probably better to use a comparison with defined precision: fabs(A - B) < Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/Sweep.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 1392,
                  "endLine": 1392
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison: P.TreatPropRadial == 1. It's probably better to use a comparison with defined precision: fabs(A - B) < Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/Sweep.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 1469,
                  "endLine": 1469
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison: P.VaccProp == 1. It's probably better to use a comparison with defined precision: fabs(A - B) < Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/Sweep.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 1567,
                  "endLine": 1567
                }
              }
            }
          ]
        },
        {
          "ruleId": "V1051",
          "message": {
            "text": "Consider checking for misprints. It's possible that the 'Hosts[contact].dct_end_time' should be checked here."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/Sweep.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 1154,
                  "endLine": 1154
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "message": {
                "text": "Consider checking for misprints. It's possible that the 'Hosts[contact].dct_end_time' should be checked here."
              },
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/Sweep.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "endLine": 1152,
                  "startLine": 1152
                }
              }
            },
            {
              "message": {
                "text": "Consider checking for misprints. It's possible that the 'Hosts[contact].dct_end_time' should be checked here."
              },
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/Sweep.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "endLine": 1154,
                  "startLine": 1154
                }
              }
            }
          ]
        },
        {
          "ruleId": "V547",
          "message": {
            "text": "Expression 'P.DoDigitalContactTracing' is always true."
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/Update.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 506,
                  "endLine": 506
                }
              }
            }
          ]
        },
        {
          "ruleId": "V560",
          "message": {
            "text": "A part of conditional expression is always true: (!f)."
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/Update.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 1283,
                  "endLine": 1283
                }
              }
            }
          ]
        },
        {
          "ruleId": "V571",
          "message": {
            "text": "Recurring check. The 'P.DoDigitalContactTracing' condition was already verified in line 503."
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/Update.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 506,
                  "endLine": 506
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "message": {
                "text": "Recurring check. The 'P.DoDigitalContactTracing' condition was already verified in line 503."
              },
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/Update.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "endLine": 503,
                  "startLine": 503
                }
              }
            },
            {
              "message": {
                "text": "Recurring check. The 'P.DoDigitalContactTracing' condition was already verified in line 503."
              },
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/Update.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "endLine": 506,
                  "startLine": 506
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison: P.ControlPropCasesId == 1. It's probably better to use a comparison with defined precision: fabs(A - B) < Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/Update.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 497,
                  "endLine": 497
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison: P.TreatPropCases == 1. It's probably better to use a comparison with defined precision: fabs(A - B) < Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/Update.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 561,
                  "endLine": 561
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison: P.TreatPropCaseHouseholds == 1. It's probably better to use a comparison with defined precision: fabs(A - B) < Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/Update.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 566,
                  "endLine": 566
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison: P.TreatPlaceProbCaseId[j] == 1. It's probably better to use a comparison with defined precision: fabs(A - B) < Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/Update.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 581,
                  "endLine": 581
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison: P.TreatPlaceProbCaseId[j] == 1. It's probably better to use a comparison with defined precision: fabs(A - B) < Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/Update.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 594,
                  "endLine": 594
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison: P.VaccPropCaseHouseholds == 1. It's probably better to use a comparison with defined precision: fabs(A - B) < Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/Update.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 615,
                  "endLine": 615
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison: P.CaseIsolationProp == 1. It's probably better to use a comparison with defined precision: fabs(A - B) < Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/Update.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 656,
                  "endLine": 656
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison: P.SymptPlaceTypeWithdrawalProp[j] == 1. It's probably better to use a comparison with defined precision: fabs(A - B) < Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/Update.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 817,
                  "endLine": 817
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison: P.ControlPropCasesId == 1. It's probably better to use a comparison with defined precision: fabs(A - B) < Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/Update.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 899,
                  "endLine": 899
                }
              }
            }
          ]
        },
        {
          "ruleId": "V550",
          "message": {
            "text": "An odd precise comparison: P.PlaceClosePropAttending[i] == 0. It's probably better to use a comparison with defined precision: fabs(A - B) < Epsilon."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "covid-sim/src/Update.cpp",
                  "uriBaseId": "SRT"
                },
                "region": {
                  "startLine": 1199,
                  "endLine": 1199
                }
              }
            }
          ]
        }
      ],
      "originalUriBaseIds": {
        "SRT": {
          "uri": "file://D:/Work/SarifTest/"
        }
      }
    }
  ]
}
